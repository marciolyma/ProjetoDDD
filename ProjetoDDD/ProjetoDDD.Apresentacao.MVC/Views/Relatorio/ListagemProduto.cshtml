@model PagedList.IPagedList<ProjetoDDD.Apresentacao.MVC.ViewModels.ProdutoViewModel>

@{
    <style>
        .right {
            text-align: right;
        }

        table {
            border-collapse: collapse;
        }

        table, th, td {
            border: 1px solid black;
        }
    </style>
}

@{
    ViewBag.Title = "ListagemProduto";
}

<div class="panel panel-default">
    <div class="panel-heading"><h5>Relatório Listagem de Produtos</h5></div>
    <div class="panel-body">

        <div class="row">
            <div class="col-md-12">
                <table class="table table-bordered table-striped">
                    <tr>
                        <th>Nome </th>
                        <th>Valor </th>
                        <th>Cliente </th>
                        <th>Disponível </th>
                    </tr>

                    @foreach (var item in Model)
            {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Nome)
                            <td class="right">@Html.DisplayFor(modelItem => item.Valor)
                            <td>@Html.DisplayFor(modelItem => item.Cliente.Nome)
                            <td>@Html.DisplayName((item.Disponivel ? "Sim" : "Não"))</td>
                        </tr>
                    }
                    <tr>
                        <td><b>@Model.Count registos de @Model.TotalItemCount</b></td>
                        <td><a href="/Relatorio/ListagemProduto?gerarPDF=true"><b>GERAR PDF</b></a></td>
                    </tr>

                </table>
            </div>
        </div>
        @{
            if (Model.TotalItemCount != Model.Count)
            {
                <div class="row">
                    <div class="col-md-12">
                        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount

                        @if (Model.HasPreviousPage)
                {
                            @Html.ActionLink("<<", "ListagemProduto", new { pagina = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                            @Html.Raw(" ");
                            @Html.ActionLink("< Anterior", "ListagemProduto", new { pagina = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                        }
                        else
                        {
                            @:<<
                            @Html.Raw(" ");
                            @:< Anterior
                }

                        @if (Model.HasNextPage)
                {
                            @Html.ActionLink("Próxima >", "ListagemProduto", new { pagina = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                            @Html.Raw(" ");
                            @Html.ActionLink(">>", "ListagemProduto", new { pagina = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                        }
                        else
                        {
                            @:Próxima >
                            @Html.Raw(" ")
                            @:>>
                }

                    </div>
                </div>
            }
        }
    </div>
</div>

<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>
